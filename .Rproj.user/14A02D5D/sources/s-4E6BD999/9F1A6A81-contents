library(tidyverse)
library(readxl)


setwd("C:/data/roceeh/Ockerprojekt/work")
set.seed(2020)

#### Data Preparation ----
# Load data

data <- read_delim("C:/data/roceeh/Ockerprojekt/data/all_ochre_dates.csv", ";", escape_double = FALSE, trim_ws = TRUE)

# Clean data
d <- data %>% mutate(age_mean = (query_age_min+query_age_max)/2, # Calculate age mean
                     age_difference = query_age_max-query_age_min,   # Calculate age age_difference
                     age_sd=(age_difference)/2.65) %>%               # calculate age standard deviation, assuming our range covers p=0.99
  unite('uid', c(assemblage.locality_idlocality, assemblage.name)) %>% 
  add_count(uid, name = 'split_assemblage') %>% 
  mutate(coeff = 1/length(unique(uid))/split_assemblage)

# ggplot styling
theme_ochre <-  function(){
  list(scale_x_continuous(limits=c(0,500000),
                          labels = function(x) format(x/1000, scientific = FALSE)),
       theme_bw(),
       labs(x='Age ka BP',
            y='Density'))
}




#### Functions ----
# Gaussian mixture distribution
mixdist <- function(age_mean, age_sd, mixcoeff=vector(), range_min, range_max, range_step){
  # Create list with normal distribution fuctions Norm() from the package distr
  require(distr)
  dist_list = list() # Create a list to be filled with the for loop
  for(i in seq(1,length(age_mean),1)){
    val <- distr::Norm(mean=age_mean[i],sd=age_sd[i])
    dist_list <- append(dist_list, val)
  }
  dist_list <- DistrList(Dlist=dist_list) # Create a DistrList from the list of individual Norm Dists
  
  # Combinte the individual Norm distributions to a mixed distribution. The mixcoefficient compensates the effect of duplicate assemblages
  if(length(mixcoeff)==0){
    mix_dist <- UnivarMixingDistribution(Dlist = dist_list)
  }else{
    mix_dist <- UnivarMixingDistribution(Dlist = dist_list, mixCoeff = mixcoeff)
  }

  # Create a table with densities
  mix_dist_table<-data.frame(age = seq(range_min,range_max,range_step),
                             density = mix_dist@d(seq(range_min,range_max,range_step)))
  return(mix_dist_table)
  
}
#saveRDS(mixdist, 'mixdist_function.rds')

# Smoothing function
smoothdist <- function(data,smoothing_list){
  require(pracma)
  for(i in smoothing_list){
    data[,paste0("smooth", i)] <- movavg(data$density, n=i, type = 's')   
  }
  return(data)
}
#saveRDS(smoothdist, 'smoothdist_function.rds')


#### Analysis ----

# Dataset stats
d.stats <- data.frame(n_datasets = nrow(d),
                      n_assemblages = d %>% distinct(uid) %>% count(name='n_assemblages'),
                      n_duplicates = d %>% filter(split_assemblage>1) %>% count(name='n_duplicates'),
                      n_MSA = d %>% filter(archaeological_layer.archstratigraphy_idarchstrat=='MSA') %>% count(name='n_MSA'))


# Effect of coefficient weighting to compensate duplicate assemblages
dist.ochre.weighting_test <- data.frame(age=seq(40000,500000,1000),
                                        uncompensated = mixdist(age_mean = d$age_mean,
                                                                age_sd = d$age_sd,
                                                                range_min = 40000,
                                                                range_max = 500000,
                                                                range_step = 1000)[,2],
                                        compensated = mixdist(age_mean = d$age_mean,
                                                              age_sd = d$age_sd,
                                                              range_min = 40000,
                                                              range_max = 500000,
                                                              range_step = 1000,
                                                              mixcoeff = d$coeff)[,2]
                                        )

#write.csv2(dist.ochre.weighting_test, file='dist_ochre_weighting_test.csv')

ggplot(data=dist.ochre.weighting_test %>% 
         pivot_longer(-c(age), names_to = 'var', values_to = 'val'), 
       aes(x=age, y=val, color=var))+
  geom_line()+
  theme_ochre()+
  scale_color_discrete(name='')+
  theme(legend.position="bottom")

#ggsave("ochre_density_duplicate_assemmblages_weighting.tiff", width = 8.4, height = 8.4, units = 'cm', dpi=400)



# Effect of smoothing parameters on ochre distribution
dist.ochre <- mixdist(age_mean = d$age_mean,
                      age_sd = d$age_sd,
                      range_min = 40000,
                      range_max = 500000,
                      range_step = 1000,
                      mixcoeff = d$coeff)
dist.ochre.smoothed <- smoothdist(data = dist.ochre,
                                  smoothing_list = c(5,10,15,20,30,40))

#write.csv2(dist.ochre.smoothed, file='dist_ochre_smoothed.csv')

ggplot(data=dist.ochre.smoothed %>% 
         pivot_longer(-c(age), names_to = 'var', values_to = 'val'),
       aes(x=age, y=val, color=var, linetype=var)) +
  geom_line() +
  theme_ochre()+
  scale_color_discrete(name='Smoothing interval (ka)', 
                       labels=c('none',5,10,15,20,30,40),
                       breaks=c("density",'smooth5','smooth10','smooth15','smooth20','smooth30','smooth40'))+
  scale_linetype_manual(name='Smoothing interval (ka)', 
                        values=c('solid','longdash','longdash','longdash','longdash','longdash','longdash'),
                        labels=c('none',5,10,15,20,30,40),
                        breaks=c("density",'smooth5','smooth10','smooth15','smooth20','smooth30','smooth40'))+
  guides(colour = guide_legend(title.position = "top"))+
  theme(legend.position="bottom")
ggsave("ochre_density_smoothing.tiff", width = 8.4, height = 10, units = 'cm', dpi=400)


# Effect of ASTRAT == MSA
d2 <- d %>% filter(archaeological_layer.archstratigraphy_idarchstrat != 'MSA') %>% mutate(coeff = 1/length(unique(uid))/split_assemblage)

dist.ochre.astrat <- data.frame(age=seq(40000,500000,1000),
                                with_MSA = mixdist(age_mean = d$age_mean,
                                                        age_sd = d$age_sd,
                                                        range_min = 40000,
                                                        range_max = 500000,
                                                        range_step = 1000)[,2],
                                without_MSA = mixdist(age_mean = d2$age_mean,
                                                      age_sd = d2$age_sd,
                                                      range_min = 40000,
                                                      range_max = 500000,
                                                      range_step = 1000,
                                                      mixcoeff = d2$coeff)[,2]
)

ggplot(data=dist.ochre.astrat %>% 
         pivot_longer(-c(age), names_to = 'var', values_to = 'val'), 
       aes(x=age, y=val, color=var))+
  geom_line()+
  theme_ochre()+
  scale_color_discrete(name='Arch. strat.', 
                       labels=c('with MSA','without MSA'),
                       breaks=c("with_MSA",'without_MSA'))+
  #ggtitle('Influence of MSA assemblages')+
  theme(legend.position="bottom")

ggsave("ochre_density_MSA_effect.tiff", width = 8.4, height = 8.4, units = 'cm', dpi=400)




#### Changepoint analysis ----
#http://members.cbio.mines-paristech.fr/~thocking/change-tutorial/RK-CptWorkshop.html#multiple-changepoints
library(changepoint)

changepoints <- function(dens, age, min_seg, step_min=3, step_max=10, run='1'){
  require(changepoint)
  df <- data.frame("min_seg"=vector(), "val"=vector(), "run"=vector())
  for (i in seq(step_min,step_max,1)){
    x <- cpt.mean(data=dens,
                  penalty = 'None',
                  method = 'SegNeigh',
                  Q = i,
                  test.stat= 'Normal'
                  )
    if(x %>% cpts %>% diff %>% min() > min_seg){
      df2 <- data.frame("min_seg"= rep(i,x %>% cpts %>% length), 
                        "val"=age[x %>% cpts],
                        "run"=rep(run,x %>% cpts %>% length))
      df <- rbind(df,df2)
    }

  }
  return(df)
}



mycp <- changepoints(dens=dist.ochre.smoothed %>% select(smooth40) %>% as.list() %>% unlist,
                      age=dist.ochre.smoothed %>% select(age)%>% as.list() %>% unlist,
                      min_seg = 10)

mycps <- changepoints(dens=dist.ochre.smoothed %>% select(density) %>% as.list() %>% unlist,
                     age=dist.ochre.smoothed %>% select(age)%>% as.list() %>% unlist,
                     min_seg = 10,
                     run='density') %>% 
  rbind(mycp <- changepoints(dens=dist.ochre.smoothed %>% select(smooth5) %>% as.list() %>% unlist,
                             age=dist.ochre.smoothed %>% select(age)%>% as.list() %>% unlist,
                             min_seg = 10,
                             run='smooth5')) %>% 
  rbind(mycp <- changepoints(dens=dist.ochre.smoothed %>% select(smooth10) %>% as.list() %>% unlist,
                           age=dist.ochre.smoothed %>% select(age)%>% as.list() %>% unlist,
                           min_seg = 10,
                           run='smooth10')) %>% 
  rbind(mycp <- changepoints(dens=dist.ochre.smoothed %>% select(smooth15) %>% as.list() %>% unlist,
                             age=dist.ochre.smoothed %>% select(age)%>% as.list() %>% unlist,
                             min_seg = 10,
                             run='smooth15')) %>% 
  rbind(mycp <- changepoints(dens=dist.ochre.smoothed %>% select(smooth20) %>% as.list() %>% unlist,
                             age=dist.ochre.smoothed %>% select(age)%>% as.list() %>% unlist,
                             min_seg = 10,
                             run='smooth20')) %>% 
  rbind(mycp <- changepoints(dens=dist.ochre.smoothed %>% select(smooth30) %>% as.list() %>% unlist,
                             age=dist.ochre.smoothed %>% select(age)%>% as.list() %>% unlist,
                             min_seg = 10,
                             run='smooth30')) %>% 
  rbind(mycp <- changepoints(dens=dist.ochre.smoothed %>% select(smooth40) %>% as.list() %>% unlist,
                             age=dist.ochre.smoothed %>% select(age)%>% as.list() %>% unlist,
                             min_seg = 10,
                             run='smooth40'))




ggplot(data=mycps, aes(val))+
  geom_area(data=dist.ochre.smoothed %>% pivot_longer(-age, names_to='run', values_to='val'), 
            aes(x=age,y=val)) +
  geom_vline(xintercept = mycps$val, color='grey', alpha=0.2)+
  geom_vline(aes(xintercept=val), color='red', alpha=0.2)+
  facet_grid(run~.)+
  theme_ochre()+
  ggtitle('Changepoints for smoothed densities')
ggsave("ochre_changepoints_smooth40.tiff", width = 15, height = 25, units = 'cm', dpi=400)






